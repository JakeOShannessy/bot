#!/bin/bash
#---------------------------------------------
#                   usage
#---------------------------------------------

function usage {
echo "update_fds_timings [options]"
echo "This scripts reads in two timing files generated by firebot or smokebot.  It then outputs the:"
echo "   1. number of cases that had decreased run times and the total decreased tun time amount"
echo "   2. number of cases that had increased run times and the total increased run time amount"
echo "   3. total number of cases and net increase or (decrease) run time amount"
echo ""
echo "Options:"
echo "-a file - file containing 'after' fds case times [default: $after]"
echo "-A dir - directory containing 'after' timing file [default: $afterdir]"
echo "-b file - file containing 'before' fds case times [default: $before]"
echo "-B dir - directory containing 'before' timing file [default: $beforedir]"
echo "-h - display this message"
exit 0
}

filelist=/tmp/fds_times$$.txt

CURDIR=`pwd`
fdsrepo=../../fds
cd $fdsrepo
fdsrepo=`pwd`
cd $CURDIR

CURDIR=`pwd`
figrepo=../../fig
cd $figrepo
figrepo=`pwd`
cd $CURDIR

beforedir=$figrepo/compare/firebot/times
before=base_times.csv
afterdir=~firebot/.firebot/history
after=`ls -rtlm $afterdir/*timing*csv | grep -v bench | tail -1 | awk -F',' '{print $1}'`
after=`basename $after`

#*** parse options

while getopts 'a:A:b:B:h' OPTION
do
case $OPTION  in
  a)
   after="$OPTARG"
   ;;
  A)
   afterdir="$OPTARG"
   ;;
  b)
   before="$OPTARG"
   ;;
  B)
   beforedir="$OPTARG"
   ;;
  h)
   usage;
   ;;
esac
done
shift $(($OPTIND-1))

botrepo=../../bot
cd $botrepo
botrepo=`pwd`
cd $CURDIR

cat $beforedir/$before | head -n -2 | awk -F ',' '{if (NR!=1)  {print($1) }}' > $filelist

files_up=0
files_down=0
time_up=0.0
time_down=0.0
for file in `cat $filelist`; do
  line_before=`grep $file $beforedir/$before`
  line_after=`grep  $file $afterdir/$after`
  if [ "$line_after" == "" ]; then
    continue
  fi
  time_before=`echo $line_before | awk -F',' '{print $2}'`
  time_after=`echo $line_after |   awk -F',' '{print $2}'`
  time_diff=`echo "$time_after - $time_before" | bc`
  got_smaller=$((`echo "$time_before > $time_after"| bc`))
  if [ $got_smaller -eq 1 ]; then
    files_down=$((files_down+1))
    time_down=`echo "$time_down - ($time_diff)" | bc`
  else
    files_up=$((files_up+1))
    time_up=`echo "$time_up + ($time_diff)" | bc`
  fi
done
files_total=`echo "$files_up+$files_down"|bc`
time_total=`echo "$time_up-$time_down"|bc`

echo "smaller,$files_down,$time_down"
echo "bigger,$files_up,$time_up"
echo "total,$files_total,$time_total"

rm $filelist
